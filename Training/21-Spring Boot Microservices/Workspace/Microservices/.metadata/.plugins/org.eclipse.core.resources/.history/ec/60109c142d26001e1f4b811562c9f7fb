package training.iqgateway.moviecatalogservice.resources;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import training.iqgateway.moviecatalogservice.models.CatalogItem;
import training.iqgateway.moviecatalogservice.models.Movie;
import training.iqgateway.moviecatalogservice.models.Rating;

@RestController
@RequestMapping("/catalog")
public class MovieCatalogResource {

	@Autowired
	private RestTemplate restTemplate;

	@RequestMapping("/{userId}")
	public List<CatalogItem> getCatalog(@PathVariable("userId") String userId) {

		// This was a Static data
//		List<Rating> ratings = Arrays.asList(
//				
//			new Rating("1", 4), 
//			new Rating("2", 5)
//
//		);
		
		ResponseEntity<List<Rating>> response = restTemplate.exchange(
                "http://localhost:9092/ratingsdata/users/" + userId,
                HttpMethod.GET,
                null,
                new ParameterizedTypeReference<List<Rating>>() {}
            );

    List<Rating> ratings = response.getBody();

		// Get All Rated Movie Ids From Rating Data Service [ API Call ]

		// For Each Movie ID, Call Movie Info Service and Get the Details

		// At Last We Will Consolidate the Data and Furnish it
		return ratings.stream().map(rating -> {

			Movie movie = restTemplate.getForObject("http://localhost:9092/movies/" + rating.getMovieId(), Movie.class);

			return new CatalogItem(movie.getName(), "Nice Movie", rating.getRating());
		}).collect(Collectors.toList());

		// return Collections.singletonList(
		// new CatalogItem("KGF Chapter-1", "Nice Movie",5)
		// );

	}

}
